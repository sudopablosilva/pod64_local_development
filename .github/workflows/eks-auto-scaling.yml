name: EKS Cluster Auto Scaling

permissions:
  contents: write

on:
  schedule:
    # Monday at 7am - Scale out
    - cron: '0 7 * * 1'
    # Friday at 8pm - Scale in
    - cron: '0 20 * * 5'
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-scaling-values:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: feature/control-plane-ops
          fetch-depth: 0
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Set scaling parameters based on day and time
        id: set-scaling
        run: |
          # Get current day of week (1-7, where 1 is Monday)
          DAY=$(date +%u)
          # Get current hour (0-23)
          HOUR=$(date +%H)
          
          # For testing purposes, determine operation based on workflow_dispatch or schedule
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Allow manual selection via input when manually triggered
            OPERATION="${{ github.event.inputs.operation || 'scale-out' }}"
          else
            # Default based on schedule
            if [[ "${{ github.event.schedule }}" == "0 7 * * 1" ]]; then
              OPERATION="scale-out"
            else
              OPERATION="scale-in"
            fi
          fi
          
          # Set values based on operation
          if [[ "$OPERATION" == "scale-in" ]]; then
            MIN=0
            DESIRED=0
            MAX=0
          else
            MIN=3
            DESIRED=3
            MAX=10
          fi
          
          echo "min=$MIN" >> $GITHUB_OUTPUT
          echo "desired=$DESIRED" >> $GITHUB_OUTPUT
          echo "max=$MAX" >> $GITHUB_OUTPUT
          echo "operation=$OPERATION" >> $GITHUB_OUTPUT

      - name: Examine file structure
        run: |
          FILE_PATH="platform/prod/prod/gitops/iac-bootstrap/platform-values.yaml"
          
          echo "=== First 30 lines of the file ==="
          head -n 30 "$FILE_PATH"
          echo "=== End of preview ==="
          
          echo "=== Looking for shard: \"0\" section ==="
          grep -n -A 5 'shard: "0"' "$FILE_PATH" || echo "Pattern not found"
          echo "=== End of search ==="

      - name: Update platform-values.yaml using sed
        run: |
          FILE_PATH="platform/prod/prod/gitops/iac-bootstrap/platform-values.yaml"
          
          # Make a backup of the original file
          cp "$FILE_PATH" "${FILE_PATH}.bak"
          
          # Use sed with line number context to update only the values after shard: "0"
          # First, find the line number where shard: "0" appears
          SHARD_LINE=$(grep -n 'shard: "0"' "$FILE_PATH" | cut -d: -f1)
          
          if [ -n "$SHARD_LINE" ]; then
            echo "Found 'shard: \"0\"' at line $SHARD_LINE"
            
            # Calculate the line numbers for the values we want to update
            # These offsets may need adjustment based on the actual file structure
            MIN_LINE=$((SHARD_LINE + 1))
            DESIRED_LINE=$((SHARD_LINE + 2))
            MAX_LINE=$((SHARD_LINE + 3))
            
            # Update the values using sed with line numbers
            sed -i "${MIN_LINE}s/eksAsgMin:.*/eksAsgMin: ${{ steps.set-scaling.outputs.min }}/" "$FILE_PATH"
            sed -i "${DESIRED_LINE}s/eksAsgDesired:.*/eksAsgDesired: ${{ steps.set-scaling.outputs.desired }}/" "$FILE_PATH"
            sed -i "${MAX_LINE}s/eksAsgMax:.*/eksAsgMax: ${{ steps.set-scaling.outputs.max }}/" "$FILE_PATH"
            
            echo "Updated values at lines $MIN_LINE, $DESIRED_LINE, and $MAX_LINE"
          else
            echo "WARNING: Could not find 'shard: \"0\"' in the file"
            exit 1
          fi
          
          # Show the changes made
          echo "=== Changes made to the file ==="
          diff "${FILE_PATH}.bak" "$FILE_PATH" || true
          echo "=== End of changes ==="
          
          echo "Updated scaling parameters for shard 0 only to: Min=${{ steps.set-scaling.outputs.min }}, Desired=${{ steps.set-scaling.outputs.desired }}, Max=${{ steps.set-scaling.outputs.max }}"
          echo "Operation: ${{ steps.set-scaling.outputs.operation }}"

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Auto ${{ steps.set-scaling.outputs.operation }}: Update EKS scaling parameters for shard 0"
          branch: feature/control-plane-ops
          file_pattern: platform/prod/prod/gitops/iac-bootstrap/platform-values.yaml
          commit_user_name: GitHub Actions
          commit_user_email: github-actions@github.com
          commit_author: GitHub Actions <github-actions@github.com>
