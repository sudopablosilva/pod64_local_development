#!/bin/bash

# Dashboard em tempo real para monitorar o sistema POC BDD
# Mostra contadores de tabelas DynamoDB e filas SQS com dados versionados
# ATUALIZADO: Usa endpoints dos microservi√ßos em vez de acesso direto ao LocalStack

echo "üöÄ POC BDD - Dashboard em Tempo Real (Vers√£o Corrigida)"
echo "Pressione Ctrl+C para sair"
echo ""

while true; do
    clear
    echo "üìä POC BDD - Dashboard em Tempo Real - $(date '+%H:%M:%S')"
    echo "=============================================================="
    echo ""
    
    echo "üìã TABELAS DYNAMODB (via microservi√ßos):"
    echo "----------------------------------------------"
    
    # Tabela executions via JMI (usando endpoint corrigido)
    executions_data=$(curl -s http://localhost:4333/executions 2>/dev/null)
    executions_count=$(echo "$executions_data" | jq -r '.count // 0' 2>/dev/null)
    
    if [ "$executions_count" = "null" ] || [ -z "$executions_count" ]; then
        executions_count="‚ùå JMI offline"
    fi
    
    echo "üîÑ executions: $executions_count registros (via JMI)"
    
    # Mostrar √∫ltimos registros de executions se houver dados
    if [ "$executions_count" != "‚ùå JMI offline" ] && [ "$executions_count" -gt 0 ] 2>/dev/null; then
        echo "   üìù √öltimos registros versionados:"
        echo "$executions_data" | jq -r '.executions[]? | "      ‚Ä¢ " + (.executionName // "N/A") + " | " + (.stage // "N/A") + " | " + (.status // "N/A")' 2>/dev/null | head -5
    fi
    
    # Verificar outras tabelas via JMI
    tables_data=$(curl -s http://localhost:4333/tables 2>/dev/null)
    tables_count=$(echo "$tables_data" | jq -r '.count // 0' 2>/dev/null)
    
    if [ "$tables_count" != "0" ] && [ "$tables_count" != "null" ] 2>/dev/null; then
        echo "üìã Total de tabelas dispon√≠veis: $tables_count"
        echo "   Tabelas: $(echo "$tables_data" | jq -r '.tables[]?' 2>/dev/null | tr '\n' ' ')"
    else
        echo "üìã ‚ö†Ô∏è N√£o foi poss√≠vel listar outras tabelas"
    fi
    
    echo ""
    echo "üì® FILAS SQS (via JMI):"
    echo "----------------------------------------------"
    
    # Obter informa√ß√µes das filas via JMI
    queues_data=$(curl -s http://localhost:4333/queues 2>/dev/null)
    queues_count=$(echo "$queues_data" | jq -r '.count // 0' 2>/dev/null)
    
    if [ "$queues_count" != "0" ] && [ "$queues_count" != "null" ] 2>/dev/null; then
        echo "üì¨ Total de filas: $queues_count"
        echo "$queues_data" | jq -r '.queues[]? | "   ‚Ä¢ " + .name + ": " + (.visibleMessages // "0") + " vis√≠veis, " + (.notVisibleMessages // "0") + " processando"' 2>/dev/null
    else
        echo "üì¨ ‚ö†Ô∏è N√£o foi poss√≠vel acessar informa√ß√µes das filas SQS"
    fi
    echo "----------------------------------------------"
    
    # Verificar status de cada servi√ßo
    services=(
        "Control-M:4333"
        "JMI:4333" 
        "JMW:8080"
        "JMR:8084"
        "Scheduler:8085"
        "SPA:4444"
        "SPAQ:8087"
    )
    
    for service_info in "${services[@]}"; do
        service_name=$(echo "$service_info" | cut -d: -f1)
        service_port=$(echo "$service_info" | cut -d: -f2)
        
        if curl -s http://localhost:$service_port/health > /dev/null 2>&1; then
            echo "‚úÖ $service_name (porta $service_port): Online"
        else
            echo "‚ùå $service_name (porta $service_port): Offline"
        fi
    done
    
    echo ""
    echo "üè• STATUS DOS SERVI√áOS:"
    
    echo ""
    echo "üîß CONFIGURA√á√ÉO ATUAL:"
    echo "----------------------------------------------"
    
    # Verificar lat√™ncia configurada
    current_delay=$(grep "PROCESSING_DELAY_MS=" finch-compose.yml | head -1 | sed 's/.*PROCESSING_DELAY_MS=\([0-9]*\).*/\1/')
    if [ "$current_delay" = "0" ] || [ -z "$current_delay" ]; then
        echo "‚ö° Lat√™ncia: Desabilitada (processamento em velocidade normal)"
    else
        echo "‚è±Ô∏è  Lat√™ncia: ${current_delay}ms por opera√ß√£o"
    fi
    
    echo ""
    echo "üí° COMANDOS √öTEIS (ATUALIZADOS):"
    echo "----------------------------------------------"
    echo "‚Ä¢ ./set-latency.sh 3000           - Configurar 3s de lat√™ncia"
    echo "‚Ä¢ ./set-latency.sh 0              - Remover lat√™ncia"
    echo "‚Ä¢ ./test-complete-flow.sh         - Executar teste completo"
    echo ""
    echo "üìä ENDPOINTS PARA MONITORAMENTO:"
    echo "----------------------------------------------"
    echo "‚Ä¢ curl http://localhost:4333/tables      - Listar tabelas DynamoDB"
    echo "‚Ä¢ curl http://localhost:4333/executions  - Ver execu√ß√µes (JMI)"
    echo "‚Ä¢ curl http://localhost:4333/queues     - Ver status das filas SQS"
    echo "‚Ä¢ curl http://localhost:4333/health      - Status do JMI"
    echo ""
    echo "Atualizando em 5 segundos... (Ctrl+C para sair)"
    
    sleep 5
done
